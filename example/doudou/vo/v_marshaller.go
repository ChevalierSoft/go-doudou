// Code generated by go generate; DO NOT EDIT.
// This file was generated by go-doudou at
// 2021-04-14 19:00:38.3689 +0800 CST m=+0.001323334
package vo

import (
	"encoding/json"
	"github.com/unionj-cloud/go-doudou/name/strategies"
)


func (object Ret) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	objectMap[strategies.LowerCaseConvert("Code")] = object.Code
	objectMap[strategies.LowerCaseConvert("Data")] = object.Data
	objectMap[strategies.LowerCaseConvert("Msg")] = object.Msg
	return json.Marshal(objectMap)
}

func (object SignUpForm) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	objectMap[strategies.LowerCaseConvert("Username")] = object.Username
	objectMap[strategies.LowerCaseConvert("Password")] = object.Password
	objectMap[strategies.LowerCaseConvert("PassConfirm")] = object.PassConfirm
	return json.Marshal(objectMap)
}

func (object LogInForm) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	objectMap[strategies.LowerCaseConvert("Username")] = object.Username
	objectMap[strategies.LowerCaseConvert("Password")] = object.Password
	return json.Marshal(objectMap)
}

func (object PageFilter) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	objectMap[strategies.LowerCaseConvert("Name")] = object.Name
	objectMap[strategies.LowerCaseConvert("Dept")] = object.Dept
	return json.Marshal(objectMap)
}

func (object PageQuery) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	objectMap[strategies.LowerCaseConvert("filter")] = object.filter
	objectMap[strategies.LowerCaseConvert("page")] = object.page
	return json.Marshal(objectMap)
}

func (object UserVo) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	objectMap[strategies.LowerCaseConvert("Id")] = object.Id
	objectMap[strategies.LowerCaseConvert("Name")] = object.Name
	objectMap[strategies.LowerCaseConvert("Phone")] = object.Phone
	objectMap[strategies.LowerCaseConvert("Dept")] = object.Dept
	return json.Marshal(objectMap)
}

func (object Auth) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	objectMap[strategies.LowerCaseConvert("Token")] = object.Token
	objectMap[strategies.LowerCaseConvert("User")] = object.User
	return json.Marshal(objectMap)
}

