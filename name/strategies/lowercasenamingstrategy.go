package strategies

import (
	"github.com/iancoleman/strcase"
	"github.com/unionj-cloud/go-doudou/stringutils"
	"text/template"
	"unicode"
)

var LowerCaseNamingStrategyTemplate = template.Must(template.New("").Funcs(map[string]interface{}{
	"toLowerCamel": strcase.ToLowerCamel,
}).Parse(templ))

func init() {
	Registry["lowerCaseNamingStrategy"] = LowerCaseNamingStrategyTemplate
}

func LowerCaseConvert(key string) (result string) {
	if stringutils.IsEmpty(key) {
		return
	}
	result = string(unicode.ToLower(rune(key[0]))) + key[1:]
	return
}

const templ = `// Code generated by go generate; DO NOT EDIT.
// This file was generated by go-doudou
package {{ .StructCollector.Package.Name }}

import (
	"encoding/json"
	"github.com/unionj-cloud/go-doudou/name/strategies"
	"reflect"
)

{{ range $struct := .StructCollector.Structs }}
func (object {{$struct.Name}}) MarshalJSON() ([]byte, error) {
	anonymous := struct {
		{{- range $field := $struct.Fields}}
		{{- if $.Omitempty }}
		{{$field.Name}} {{$field.Type}} ` + "`" + `json:"{{$field.Name | toLowerCamel}},omitempty"` + "`" + `
		{{- else }}
		{{$field.Name}} {{$field.Type}}	` + "`" + `json:"{{$field.Name | toLowerCamel}}"` + "`" + `
		{{- end }}
		{{- end }}	
	} {
		{{- range $field := $struct.Fields}}
		object.{{$field.Name}},
		{{- end }}	
	}
	return json.Marshal(anonymous)
}
{{ end }}
`
